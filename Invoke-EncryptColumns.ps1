# Modified from script generated by SQL Server Management Studio at 10:27 PM on 2/5/2016

#Requires -Modules sqlserver

[cmdletbinding()]
param(
	[string] $ConnectionString = "Data Source=localhost,1433;Initial Catalog=AlwaysEncryptedSample;UID=sa;PWD=alwaysB3Encrypt1ng;Application Name=Encryption.ps1;Column Encryption Setting=enabled;",
	[string] $AuthSchema = 'Authentication',
	[string] $AppSchema = 'Purchasing',
	[string] $LoggingSchema = 'Logging',
	[string] $AuthColumnKeyName = "AuthColumnsKey",
	[string] $AppColumnKeyName = "AppColumnsKey",
	[string] $LogColumnKeyName = "LogColumnsKey",
    [switch] $Script,
    [string] $LogFileDirectory = "$pwd"

)

try {
	$smoDatabase = Get-SqlDatabase -ConnectionString $ConnectionString
}
catch {
	Write-Error $_
	break
}

$encryptionChanges = @()

# Change table [Authentication].[AspNetUsers]
$encryptionChanges += New-SqlColumnEncryptionSettings -ColumnName "$($AuthSchema).AspNetUsers.SSN" -EncryptionType Randomized -EncryptionKey $AuthColumnKeyName


# Change table [Purchasing].[CreditCards]
$encryptionChanges += New-SqlColumnEncryptionSettings -ColumnName "$($AppSchema).CreditCards.CardNumber" -EncryptionType Randomized -EncryptionKey $AppColumnKeyName
$encryptionChanges += New-SqlColumnEncryptionSettings -ColumnName "$($AppSchema).CreditCards.CCV" -EncryptionType Randomized -EncryptionKey $AppColumnKeyName

# Change table [Logging].[Log]
$encryptionChanges += New-SqlColumnEncryptionSettings -ColumnName "$($LoggingSchema).Log.User" -EncryptionType Deterministic -EncryptionKey $LogColumnKeyName
$encryptionChanges += New-SqlColumnEncryptionSettings -ColumnName "$($LoggingSchema).Log.ClientIP" -EncryptionType Deterministic -EncryptionKey $LogColumnKeyName

Set-SqlColumnEncryption `
    -ColumnEncryptionSettings $encryptionChanges `
    -InputObject $smoDatabase `
    -Script:$Script `
    -LogFileDirectory $LogFileDirectory
