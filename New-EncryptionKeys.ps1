# Modified from script generated by SQL Server Management Studio at 10:27 PM on 2/5/2016

#Requires -Modules sqlserver

[cmdletbinding()]
param(
	[string] $ConnectionString = "Data Source=localhost,1433;Initial Catalog=AlwaysEncryptedSample;UID=sa;PWD=alwaysB3Encrypt1ng;Application Name=Encryption.ps1;Column Encryption Setting=enabled;",
	[string] $MasterKeyDNSName = "CN=Always Encrypted Sample Cert",
	[switch] $RemoveExistingCerts,
	[string] $MasterKeySQLName = "AlwaysEncryptedSampleCMK",
	[string] $AuthColumnKeyName = "AuthColumnsKey",
	[string] $AppColumnKeyName = "AppColumnsKey",
	[string] $LogColumnKeyName = "LogColumnsKey"
)

Import-Module SqlServer

try {
	$smoDatabase = Get-SqlDatabase -ConnectionString $ConnectionString
}
catch {
	Write-Error $_
	break
}

if ($RemoveExistingCerts) {
	Write-Verbose "Removing All Existing Certificates Named $($MasterKeyDNSName)"
    $existingColumns = Get-SqlColumnEncryptionKey -InputObject $smoDatabase
    $existingColumns | %{
        Remove-SqlColumnEncryptionKey -Name $_.Name -InputObject $smoDatabase
    }
    Remove-SqlColumnMasterKey -Name $MasterKeySQLName -InputObject $smoDatabase
	ls Cert:\CurrentUser\My |  where subject -eq $MasterKeyDNSName | rm
}

$cert = New-SelfSignedCertificate `
	-Subject $MasterKeyDNSName `
	-CertStoreLocation Cert:\CurrentUser\My `
	-KeyExportPolicy Exportable `
    -Type DocumentEncryptionCert `
    -KeyUsage DataEncipherment `
    -KeySpec KeyExchange
$cmkPath = "CurrentUser/My/$($cert.ThumbPrint)"
Write-Verbose "Certificate Master Key Path: $($cmkPath)"

# Create a SqlColumnMasterKeySettings object for your column master key. 
$cmkSettings = New-SqlCertificateStoreColumnMasterKeySettings `
    -CertificateStoreLocation "CurrentUser" `
    -Thumbprint $cert.Thumbprint

New-SqlColumnMasterKey -Name $MasterKeySQLName -InputObject $smoDatabase -ColumnMasterKeySettings $cmkSettings | Out-Null

@($AuthColumnKeyName, $AppColumnKeyName, $LogColumnKeyName) | %{
    New-SqlColumnEncryptionKey `
        -InputObject $smoDatabase `
        -ColumnMasterKey $MasterKeySQLName `
        -Name $_ | Out-Null
}
